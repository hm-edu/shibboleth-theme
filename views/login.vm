##
## Velocity Template for DisplayUsernamePasswordPage view-state
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## authenticationContext - context with authentication request information
## authenticationErrorContext - context with login error state
## authenticationWarningContext - context with login warning state
## ldapResponseContext - context with LDAP state (if using native LDAP)
## rpUIContext - the context with SP UI information from the metadata
## extendedAuthenticationFlows - collection of "extended" AuthenticationFlowDescriptor objects
## passwordPrincipals - contents of the shibboleth.authn.Password.PrincipalOverride bean
## encoder - HTMLEncoder class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
#set ($rpContext = $profileRequestContext.getSubcontext('net.shibboleth.idp.profile.context.RelyingPartyContext'))
#set ($username = $authenticationContext.getSubcontext('net.shibboleth.idp.authn.context.UsernamePasswordContext', true).getUsername())
#set ($passwordEnabled = false)
#if (!$passwordPrincipals or $passwordPrincipals.isEmpty() or $authenticationContext.isAcceptable($passwordPrincipals))
  #set ($passwordEnabled = true)
#end
##
<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>#springMessageText("idp.title", "Web Login Service")</title>
  <script src="$request.getContextPath()/js/dark-mode-switch.min.js"></script>
  <link rel="stylesheet" type="text/css" href="$request.getContextPath()/css/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="$request.getContextPath()/css/dark.css">
</head>

<body>
  <div class="container">
    #parse("header.vm")
    <div class="row justify-content-center">
      <div class="col-md-9 col-lg-8 col-xl-7 ml-md-auto content shadow p-3 mb-5 bg-body rounded">
        #parse("login-error.vm")
        <form action="$flowExecutionUrl" method="post">
          #parse("csrf/csrf.vm")
          #set ($serviceName = $rpUIContext.serviceName)
          #if ($serviceName && !$rpContext.getRelyingPartyId().contains($serviceName))
          <legend>
            #springMessageText("idp.login.loginTo", "Login to") $encoder.encodeForHTML($serviceName)
          </legend>
          #end

          #if ($passwordEnabled)
          <label for="username" class="form-label">#springMessageText("idp.login.username", "Username")</label>
          <input class="form-control" id="username" name="j_username" type="text" value="#if($username)$encoder.encodeForHTML($username)#end" />

          <label for="password" class="form-label">#springMessageText("idp.login.password", "Password")</label>
          <input class="form-control" id="password" name="j_password" type="password" value="" />
          #if ($passwordEnabled)
            <a href="#springMessageText(" idp.url.password.reset", '#' )">#springMessageText("idp.login.forgotPassword", "Forgot your password?")</a>
          #end

          ## You may need to modify this to taste, such as changing the flow name its checking for to authn/MFA.
          #if (!$authenticationContext.getActiveResults().containsKey('authn/Password'))
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="donotcache" value="1" id="donotcache">
            <label class="form-check-label" for="donotcache">#springMessageText("idp.login.donotcache", "Don't Remember Login")</label>
          </div>
          #end

          #end

          <div class="form-check">
            <input class="form-check-input" id="_shib_idp_revokeConsent" type="checkbox" name="_shib_idp_revokeConsent" value="true" />
            <label class="form-check-label" for="_shib_idp_revokeConsent">#springMessageText("idp.attribute-release.revoke", "Clear prior granting of permission for release of your information to this service.")</label>
          </div>
          <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            #if ($passwordEnabled)
            <button class="form-button btn btn-primary" type="submit" name="_eventId_proceed" onClick="this.childNodes[0].nodeValue='#springMessageText("idp.login.pleasewait", "Logging in, please wait..." )'">#springMessageText("idp.login.login","Login")</button>
            #end

            #foreach ($extFlow in $extendedAuthenticationFlows)
            #if ($authenticationContext.isAcceptable($extFlow) and $extFlow.apply(profileRequestContext))
            <button class="form-button btn btn-primary" type="submit" name="_eventId_$extFlow.getId()">
              #springMessageText("idp.login.$extFlow.getId().replace('authn/','')", $extFlow.getId().replace('authn/',''))
            </button>
            #end
            #end
          </div>
        </form>

        #*
        //
        // SP Description & Logo (optional)
        // These idpui lines will display added information (if available
        // in the metadata) about the Service Provider (SP) that requested
        // authentication. These idpui lines are "active" in this example
        // (not commented out) - this extra SP info will be displayed.
        // Remove or comment out these lines to stop the display of the
        // added SP information.
        //
        *#
        #set ($logo = $rpUIContext.getLogo())
        #if ($logo)
        <img src="$encoder.encodeForHTMLAttribute($logo)" alt="$encoder.encodeForHTMLAttribute($serviceName)">
        #end
        #set ($desc = $rpUIContext.getServiceDescription())
        #if ($desc)
        $encoder.encodeForHTML($desc)
        #end
        <a href="#springMessageText(" idp.url.helpdesk", '#' )"> #springMessageText("idp.login.needHelp", "Need Help?")</a></li>
        
      </div>
      
    </div>
    #parse("footer.vm")
  </div>

</body>

</html>